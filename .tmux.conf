##############################################
# .tmux.conf                                 #
# tmux configuration file                    #
# Maintainer: Drew Nall <drewnall@gmail.com> #
# Last updated: February 15, 2016            #
##############################################



###################################
# Basic Environment Configuration #
###################################
##
## Start window and pane index from 1
set -g base-index 1
setw -g pane-base-index 1
##
## Set 256 color terminal
set -g default-terminal "xterm-256color"
##
## For pbcopy and pbpaste on OSX
## https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
set -g default-command "reattach-to-user-namespace -l zsh"
##
## Set window notifications
setw -g monitor-activity on
set -g visual-activity on
##
## Automatically set window title
setw -g automatic-rename on
##
## Automatically renumber windows
set -g renumber-windows on
##
## Allow for faster key repetition
set -g repeat-time 0
##
## Mouse
set -g mouse
##
## Constrain window size to the max size of any client connected to *that window*
## (as opposed to default: constrain to max size of any client connected to the *session*)
setw -g aggressive-resize on
##
## Increase history limit
set -g history-limit 15000
##
## Use vi keybindings for tmux commandline input
## Note that to get command mode you need to hit ESC twice
set -g status-keys vi
##
## vi-style controls for copy mode
setw -g mode-keys vi
##
## No escape time for vi mode
set -sg escape-time 0
##
## Explicitly define shell (shouldn't be necessary as default-command should cover it)
set -g default-shell $SHELL

###################################
# Key Bindings                    #
###################################
##
## Unbind default stuff I don't use
unbind C-z
unbind C-b
unbind .
unbind D
unbind PPage
unbind '"'
unbind "'"
unbind %
unbind [
unbind n
unbind p
unbind -t vi-copy Enter
unbind d
unbind C-d
unbind &
unbind i
unbind z
unbind -
unbind '$'
##
## Prefix key
set -g prefix C-a
## Ctrl+A to send prefix to a nested tmux/screen session
bind C-a send-prefix
##
## Exit
bind x kill-pane
bind X confirm-before -p "tmux kill-window #W? (y/n)" kill-window
bind q confirm-before -p "tmux kill-session #S? (y/n)" kill-session
bind Q confirm-before -p "tmux kill-server? This will nuke all running tmux processes! (y/n)" kill-server
bind C-d confirm-before -p "tmux detach-client from current session? (y/n)" detach-client
##
## Split
bind | split-window -h
bind \ split-window -h
bind _ split-window -v
bind - split-window -v
##
## vim copy selection
bind [ copy-mode
bind Escape copy-mode -eu
bind Up copy-mode -eu
bind p paste-buffer
##
## Copy/Paste like vim Visual mode
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy'
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy'
bind -t vi-copy Escape cancel
##
## bind : to command-prompt like vim
## this is the default in tmux already
bind : command-prompt
## vim key map
bind \; command-prompt
##
## move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind l select-pane -R
bind j select-pane -D
bind k select-pane -U
##
## Resize panes with capital vim movement keys, 10 lines at a time
## or lowercase, 5 lines at a time
bind H resize-pane -L 10
#bind C-H resize-pane -L 5
bind L resize-pane -R 10
#bind C-L resize-pane -R 5
bind J resize-pane -D 10
#bind C-J resize-pane -D 5
bind K resize-pane -U 10
#bind C-K resize-pane -U 5
##
## Toggle zooming selected pane to fill the window
bind + resize-pane -Z
bind = resize-pane -Z
##
## Move around between windows and move windows around
bind , previous-window # <
bind . next-window # >
bind < swap-window -t :-
bind > swap-window -t :+
##
## Easily toggle synchronization (mnemonic: e is for echo)
## Sends input to all panes in a given window
## TODO: I should make this a proper toggle at some point
bind e setw synchronize-panes on
bind E setw synchronize-panes off
##
## Space to jump to last window
bind Space last-window
##
## Quickly pop a new window and SSH to a host
## TODO: get this working with known_hosts and tab completion?
bind S command-prompt -p ssh: "new-window -n %1 'ssh %1'"
##
## Reload .tmux.conf
bind r source-file ~/.tmux.conf \; display "tmux config reloaded"
##
## Refresh client
bind R refresh-client
##
## Rename windows/sessions
bind n command-prompt "rename-window %%"
bind N command-prompt "rename-session %%"


# Testing
set -g update-environment -r # Added 7.27.15

###################################
# Appearance                      #
###################################
###
## Copy selection color
setw -g mode-fg white
setw -g mode-bg blue
##
## Alert message line
set -g message-fg white
set -g message-bg brightblack
set -g message-attr bold
##
## Status line
setw -g window-status-activity-fg white
setw -g window-status-activity-bg brightblack
setw -g window-status-activity-attr default
##
## Pane borders
set -g pane-border-fg blue
set -g pane-border-bg black
set -g pane-active-border-fg blue
set -g pane-active-border-bg blue
##
## Make statusline look rad

# Testing
tm_tunes="#[fg=white,bg=colour31]#(osascript ~/.dotfiles/bin/tunes.scpt)"
tm_battery="#[fg=colour31,bg=brightblack]ÓÇ≤#[bg=colour255]#(~/.dotfiles/bin/battery_indicator.sh)"

##
set -g status on
set -g status-utf8 on
setw -g utf8 on
set -g status-interval 5
set -g status-left-length 30
set -g status-left "#[fg=colour16,bg=colour254,bold] üí¢  #S #[fg=colour254,bg=brightblack,nobold]ÓÇ∞‚´∏ "
set -g status-right "#[fg=colour31,bg=brightblack,nobold]ÓÇ≤#[fg=white,bg=colour31] "$tm_tunes"#[fg=white,nobold]#h#[fg=brightwhite,bg=colour31,nobold] ‚ù∞ #[fg=white,nobold]%b %d#[fg=white,bg=colour31,nobold] ‚£ø #[fg=white,bright]%R ‚°á"
##
##
set -g status-right-length 150
set -g window-status-format "#[fg=colour249,bg=brightblack]#I#[fg=colour244]‚ùØ#[fg=colour249]#W"
set -g window-status-current-format '#[fg=brightblack,bg=colour31]ÓÇ∞ #[fg=colour117,bg=colour31,noreverse,bold]#I‚ù± #[fg=colour231,bold]#W #[fg=colour31,bg=brightblack,nobold]ÓÇ∞'
##
## Window Titling
set -g set-titles on
set -g set-titles-string '[#I] #W'
##
## --- colors (solarized dark)
## default statusbar colors
set -g status-bg brightblack
set -g status-fg yellow
set -g status-attr default
## default window title colors
setw -g window-status-fg brightblue
## active window title colors
setw -g window-status-current-fg yellow
setw -g window-status-current-bg brightblack
setw -g window-status-current-attr dim
## pane number display
set -g display-panes-active-colour yellow
set -g display-panes-colour brightblue
## clock
setw -g clock-mode-colour yellow
## --- end colors

#tm_separator_left_bold="‚óÄ"
#tm_separator_left_thin="‚ùÆ"
#tm_separator_right_bold="‚ñ∂"
#tm_separator_right_thin="‚ùØ"
# ‚ù± ‚ùØ ‚´∏
# ‚ù¨ ‚ùÆ ‚ù∞
